From 838b0a42efc3b67cc17d63e25ae1d0ea849cd89b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Timoth=C3=A9e=20Jaussoin?= <edhelas@movim.eu>
Date: Fri, 27 Jan 2017 22:35:06 +0100
Subject: [PATCH] Fix Carbons payloads handler security issue

---
 src/Moxl/Xec/Payload/Carbons.php | 59 +++++++++++---------------------
 1 file changed, 20 insertions(+), 39 deletions(-)

diff --git a/src/Moxl/Xec/Payload/Carbons.php b/src/Moxl/Xec/Payload/Carbons.php
index c2868c6..3b22347 100644
--- a/src/Moxl/Xec/Payload/Carbons.php
+++ b/src/Moxl/Xec/Payload/Carbons.php
@@ -1,28 +1,4 @@
 <?php
-/*
- * @file Carbons.php
- *
- * @brief Handle incoming carbons messages
- *
- * Copyright 2014 edhelas <edhelas@edhelas-laptop>
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
- * MA 02110-1301, USA.
- *
- *
- */
 
 namespace Moxl\Xec\Payload;
 
@@ -30,28 +6,33 @@ class Carbons extends Payload
 {
     public function handle($stanza, $parent = false)
     {
+        $parentfrom = current(explode('/', (string)$parent->attributes()->from));
+
         $message = $stanza->forwarded->message;
 
-        $jid = explode('/',(string)$message->attributes()->from);
+        $from = current(explode('/',(string)$message->attributes()->from));
         $to = current(explode('/',(string)$message->attributes()->to));
 
-        if($message->composing)
-            $this->event('composing', array($jid[0], $to));
-        if($message->paused)
-            $this->event('paused', array($jid[0], $to));
-        if($message->gone)
-            $this->event('gone', array($jid[0], $to));
+        $user = new \User;
+        if($parentfrom == $user->getLogin()) {
+            if($message->composing)
+                $this->event('composing', [$from, $to]);
+            if($message->paused)
+                $this->event('paused', [$from, $to]);
+            if($message->gone)
+                $this->event('gone', [$from, $to]);
 
-        if($message->body || $message->subject) {
-            $m = new \Modl\Message;
-            $m->set($message, $stanza->forwarded);
+            if($message->body || $message->subject) {
+                $m = new \Modl\Message;
+                $m->set($message, $stanza->forwarded);
 
-            if(!preg_match('#^\?OTR#', $m->body)) {
-                $md = new \Modl\MessageDAO;
-                $md->set($m);
+                if(!preg_match('#^\?OTR#', $m->body)) {
+                    $md = new \Modl\MessageDAO;
+                    $md->set($m);
 
-                $this->pack($m);
-                $this->deliver();
+                    $this->pack($m);
+                    $this->deliver();
+                }
             }
         }
     }
