From b1d120a2c7d7446d2cc58d517e20a1b184b82200 Mon Sep 17 00:00:00 2001
From: Chong Cai <chongc@google.com>
Date: Fri, 25 Sep 2020 16:09:54 -0700
Subject: [PATCH] Check for return size in enc_untrusted_read

Check return size does not exceed requested. The returned result and
content still cannot be trusted, but it's expected behavior when not
using a secure file system.

PiperOrigin-RevId: 333827386
Change-Id: I0bdec0aec9356ea333dc8c647eba5d2772875f29
---
 asylo/platform/host_call/trusted/host_calls.cc | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/asylo/platform/host_call/trusted/host_calls.cc b/asylo/platform/host_call/trusted/host_calls.cc
index e1b575cda..6d7525af1 100644
--- a/asylo/platform/host_call/trusted/host_calls.cc
+++ b/asylo/platform/host_call/trusted/host_calls.cc
@@ -226,8 +226,13 @@ int enc_untrusted_rename(const char *oldpath, const char *newpath) {
 }
 
 ssize_t enc_untrusted_read(int fd, void *buf, size_t count) {
-  return static_cast<ssize_t>(EnsureInitializedAndDispatchSyscall(
+  ssize_t ret = static_cast<ssize_t>(EnsureInitializedAndDispatchSyscall(
       asylo::system_call::kSYS_read, fd, buf, count));
+  if (ret != -1 && ret > count) {
+    ::asylo::primitives::TrustedPrimitives::BestEffortAbort(
+        "enc_untrusted_read: read result exceeds requested");
+  }
+  return ret;
 }
 
 ssize_t enc_untrusted_write(int fd, const void *buf, size_t count) {
