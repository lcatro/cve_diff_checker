From 36400a7fa3753028a3bf89a9cdb28c5e25693c59 Mon Sep 17 00:00:00 2001
From: raghavendra ambadas <rambad@codeaurora.org>
Date: Fri, 19 Jan 2018 13:49:21 +0530
Subject: msm: mdss: fix race condition between rotator api's

current code does not have locking mechanism between
rotator play and rotator unset, due to which race condition
can occur when concurrent threads invoke rotator play and
unset ioctl cmd. So use mutex lock to avoid such issues.

Change-Id: I6a7cd16ee8a8f3a4c9397e87b8c109809ec6f573
Signed-off-by: Raghavendra Ambadas <rambad@codeaurora.org>
---
 drivers/video/msm/mdss/mdss_mdp_rotator.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/video/msm/mdss/mdss_mdp_rotator.c b/drivers/video/msm/mdss/mdss_mdp_rotator.c
index b2b04ee..eea81a6 100644
--- a/drivers/video/msm/mdss/mdss_mdp_rotator.c
+++ b/drivers/video/msm/mdss/mdss_mdp_rotator.c
@@ -1,4 +1,4 @@
-/* Copyright (c) 2012-2015, The Linux Foundation. All rights reserved.
+/* Copyright (c) 2012-2015, 2018, The Linux Foundation. All rights reserved.
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License version 2 and
@@ -43,6 +43,7 @@ struct mdss_mdp_rot_pipe {
 struct mdss_mdp_rot_session_mgr {
 	struct list_head queue;
 	struct mutex session_lock;
+	struct mutex req_lock;
 	int session_id;
 	int session_count;
 
@@ -77,6 +78,7 @@ int mdss_mdp_rot_mgr_init(void)
 
 	mutex_init(&rot_mgr->session_lock);
 	mutex_init(&rot_mgr->pipe_lock);
+	mutex_init(&rot_mgr->req_lock);
 	INIT_LIST_HEAD(&rot_mgr->queue);
 	rot_mgr->rot_work_queue = create_workqueue("rot_commit_workq");
 	if (!rot_mgr->rot_work_queue) {
@@ -1009,9 +1011,11 @@ int mdss_mdp_rotator_play(struct msm_fb_data_type *mfd,
 	u32 flgs;
 	struct mdss_mdp_data src_buf;
 
+	mutex_lock(&rot_mgr->req_lock);
 	rot = mdss_mdp_rot_mgr_get_session(req->id);
 	if (!rot) {
 		pr_err("invalid session id=%x\n", req->id);
+		mutex_unlock(&rot_mgr->req_lock);
 		return -ENOENT;
 	}
 
@@ -1074,6 +1078,7 @@ int mdss_mdp_rotator_play(struct msm_fb_data_type *mfd,
 
 dst_buf_fail:
 	mutex_unlock(&rot->lock);
+	mutex_unlock(&rot_mgr->req_lock);
 	mdss_iommu_ctrl(0);
 	return ret;
 }
@@ -1083,9 +1088,11 @@ int mdss_mdp_rotator_unset(int ndx)
 	struct mdss_mdp_rotator_session *rot;
 	int ret = 0;
 
+	mutex_lock(&rot_mgr->req_lock);
 	rot = mdss_mdp_rot_mgr_get_session(ndx);
 	if (rot)
 		ret = mdss_mdp_rotator_release(rot);
+	mutex_unlock(&rot_mgr->req_lock);
 
 	return ret;
 }
-- 
cgit v1.1

