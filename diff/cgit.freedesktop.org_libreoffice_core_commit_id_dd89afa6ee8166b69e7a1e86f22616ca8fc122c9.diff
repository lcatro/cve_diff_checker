From dd89afa6ee8166b69e7a1e86f22616ca8fc122c9 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Caol=C3=A1n=20McNamara?= <caolanm@redhat.com>
Date: Thu, 7 Sep 2017 13:37:30 +0100
Subject: Resolves: tdf#112269 libwpd fix
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Change-Id: I0d8d6887fa360c05d5f9e2a070410c77926b9ce1
Reviewed-on: https://gerrit.libreoffice.org/42054
Tested-by: Jenkins <ci@libreoffice.org>
Reviewed-by: Caolán McNamara <caolanm@redhat.com>
Tested-by: Caolán McNamara <caolanm@redhat.com>
---
 external/libwpd/UnpackedTarball_libwpd.mk |  1 +
 external/libwpd/libwpd-tdf112269.patch.1  | 42 +++++++++++++++++++++++++++++++
 2 files changed, 43 insertions(+)
 create mode 100644 external/libwpd/libwpd-tdf112269.patch.1

diff --git a/external/libwpd/UnpackedTarball_libwpd.mk b/external/libwpd/UnpackedTarball_libwpd.mk
index f8907bd20c7a..599b75acc046 100644
--- a/external/libwpd/UnpackedTarball_libwpd.mk
+++ b/external/libwpd/UnpackedTarball_libwpd.mk
@@ -16,6 +16,7 @@ $(eval $(call gb_UnpackedTarball_set_patchlevel,libwpd,0))
 $(eval $(call gb_UnpackedTarball_add_patches,libwpd,\
 	external/libwpd/libwpd-vs2013.patch.1 \
 	$(if $(SYSTEM_REVENGE),,external/libwpd/rpath.patch) \
+	external/libwpd/libwpd-tdf112269.patch.1 \
 ))
 
 ifneq ($(OS),MACOSX)
diff --git a/external/libwpd/libwpd-tdf112269.patch.1 b/external/libwpd/libwpd-tdf112269.patch.1
new file mode 100644
index 000000000000..bc79ab0eaccd
--- /dev/null
+++ b/external/libwpd/libwpd-tdf112269.patch.1
@@ -0,0 +1,42 @@
+--- libwpd/src/lib/WP5StylesListener.cpp
++++ libwpd/src/lib/WP5StylesListener.cpp
+@@ -85,8 +85,9 @@
+ 		m_currentPage = WPXPageSpan(m_pageList.back(), 0.0, 0.0);
+ 		m_currentPage.setPageSpan(1);
+ 
+-		for (std::vector<WPXHeaderFooter>::const_iterator HFiter = (m_nextPage.getHeaderFooterList()).begin();
+-		        HFiter != (m_nextPage.getHeaderFooterList()).end(); ++HFiter)
++		std::vector<WPXHeaderFooter> headerFooterList = m_nextPage.getHeaderFooterList();
++		for (std::vector<WPXHeaderFooter>::const_iterator HFiter = headerFooterList.begin();
++		        HFiter != headerFooterList.end(); ++HFiter)
+ 		{
+ 			if ((*HFiter).getOccurrence() != NEVER)
+ 			{
+--- libwpd/src/lib/WP42StylesListener.cpp
++++ libwpd/src/lib/WP42StylesListener.cpp
+@@ -84,8 +84,9 @@
+ 			m_currentPage = WPXPageSpan(m_pageList.back(), 0.0, 0.0);
+ 			m_currentPage.setPageSpan(1);
+ 
+-			for (std::vector<WPXHeaderFooter>::const_iterator HFiter = (m_nextPage.getHeaderFooterList()).begin();
+-			        HFiter != (m_nextPage.getHeaderFooterList()).end(); ++HFiter)
++			std::vector<WPXHeaderFooter> headerFooterList = m_nextPage.getHeaderFooterList();
++			for (std::vector<WPXHeaderFooter>::const_iterator HFiter = headerFooterList.begin();
++			        HFiter != headerFooterList.end(); ++HFiter)
+ 			{
+ 				if ((*HFiter).getOccurrence() != NEVER)
+ 				{
+--- libwpd/src/lib/WP1StylesListener.cpp
++++ libwpd/src/lib/WP1StylesListener.cpp
+@@ -83,8 +83,9 @@
+ 			m_currentPage = WPXPageSpan(m_pageList.back(), 0.0, 0.0);
+ 			m_currentPage.setPageSpan(1);
+ 
+-			for (std::vector<WPXHeaderFooter>::const_iterator HFiter = (m_nextPage.getHeaderFooterList()).begin();
+-			        HFiter != (m_nextPage.getHeaderFooterList()).end(); ++HFiter)
++			std::vector<WPXHeaderFooter> headerFooterList = m_nextPage.getHeaderFooterList();
++			for (std::vector<WPXHeaderFooter>::const_iterator HFiter = headerFooterList.begin();
++			        HFiter != headerFooterList.end(); ++HFiter)
+ 			{
+ 				if ((*HFiter).getOccurrence() != NEVER)
+ 				{
-- 
cgit v1.2.1

