From 767e700a5f056626cb7156d4944130104893d631 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=B6ren=20Tempel?= <tempel@uni-bremen.de>
Date: Mon, 8 Feb 2021 11:29:44 +0100
Subject: [PATCH] clif: After incrementing pos, make sure it is still in bounds

While the for-loop condition does contain a bounds check, the pointer is
independently increment in the for-loop body. This increment therefore
requires a separate bounds check. Otherwise, the parsing loop may access
data outside the given buffer boundaries.
---
 sys/clif/clif.c                         |  5 ++++-
 tests/unittests/tests-clif/tests-clif.c | 14 +++++++++++++-
 2 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/sys/clif/clif.c b/sys/clif/clif.c
index 029aec3b9e59..893a5cdd9c12 100644
--- a/sys/clif/clif.c
+++ b/sys/clif/clif.c
@@ -278,7 +278,10 @@ ssize_t clif_get_attr(const char *input, size_t input_len, clif_attr_t *attr)
             attr->key_len = pos - attr->key;
             /* check if the value is quoted and prepare pointer for value scan */
             pos++;
-            if (*pos == '"') {
+            if (pos == end) {
+                break;
+            }
+            else if (*pos == '"') {
                 quoted = true;
                 pos++;
             }
diff --git a/tests/unittests/tests-clif/tests-clif.c b/tests/unittests/tests-clif/tests-clif.c
index ed843a16347c..c299bac0ca09 100644
--- a/tests/unittests/tests-clif/tests-clif.c
+++ b/tests/unittests/tests-clif/tests-clif.c
@@ -274,11 +274,23 @@ static void test_clif_decode_links(void)
     TEST_ASSERT_EQUAL_INT(exp_attrs_numof, attrs_numof);
 }
 
+static void test_clif_get_attr_missing_value(void)
+{
+    clif_attr_t attr;
+    char *input = ";ct=";
+
+    /* Used to result in a spatial memory safety violation.
+     * See: https://github.com/RIOT-OS/RIOT/pull/15945 */
+    int r = clif_get_attr(input, strlen(input), &attr);
+    TEST_ASSERT_EQUAL_INT(strlen(input), r);
+}
+
 Test *tests_clif_tests(void)
 {
     EMB_UNIT_TESTFIXTURES(fixtures) {
         new_TestFixture(test_clif_encode_links),
-        new_TestFixture(test_clif_decode_links)
+        new_TestFixture(test_clif_decode_links),
+        new_TestFixture(test_clif_get_attr_missing_value),
     };
 
     EMB_UNIT_TESTCALLER(clif_tests, NULL, NULL, fixtures);
