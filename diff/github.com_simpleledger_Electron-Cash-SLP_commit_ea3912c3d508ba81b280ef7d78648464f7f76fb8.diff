From ea3912c3d508ba81b280ef7d78648464f7f76fb8 Mon Sep 17 00:00:00 2001
From: James Cramer <jcramer@simpleledger.io>
Date: Fri, 24 Apr 2020 14:57:51 -0400
Subject: [PATCH] patch for critical vulnerability in mint tool related to #126

This commit fixes an issue where the order of SLP outputs could be reordered because the "mandatory_coins" parameter was not being used as it should be with all SLP transactions.  Reordering the output addresses could sometimes cause the token mint baton receiver and token receiver addresses to be switched.
---
 gui/qt/slp_create_token_mint_dialog.py | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

diff --git a/gui/qt/slp_create_token_mint_dialog.py b/gui/qt/slp_create_token_mint_dialog.py
index bf0a5d8dd5f..6734f6f2051 100644
--- a/gui/qt/slp_create_token_mint_dialog.py
+++ b/gui/qt/slp_create_token_mint_dialog.py
@@ -209,7 +209,7 @@ def mint_token(self, preview=False):
 
         desired_fee_rate = 1.0  # sats/B, just init this value for paranoia
         try:
-            tx = self.main_window.wallet.make_unsigned_transaction(coins, outputs, self.main_window.config, fee, None)
+            tx = self.main_window.wallet.make_unsigned_transaction(coins, outputs, self.main_window.config, fee, None, mandatory_coins=[baton_input])
             desired_fee_rate = tx.get_fee() / tx.estimated_size()  # remember the fee coin chooser & wallet gave us as a fee rate so we may use it below after adding baton to adjust fee downward to this rate.
         except NotEnoughFunds:
             self.show_message(_("Insufficient funds"))
@@ -222,16 +222,6 @@ def mint_token(self, preview=False):
             self.show_message(str(e))
             return
 
-        # Find & Add baton to tx inputs
-        try:
-            baton_utxo = self.main_window.wallet.get_slp_token_baton(self.token_id_e.text())
-        except SlpNoMintingBatonFound:
-            self.show_message(_("There is no minting baton found for this token."))
-            return
-
-        tx.add_inputs([baton_utxo])
-        for txin in tx._inputs:
-            self.main_window.wallet.add_input_info(txin)
 
         def tx_adjust_change_amount_based_on_baton_amount(tx, desired_fee_rate):
             ''' adjust change amount (based on amount added from baton) '''
