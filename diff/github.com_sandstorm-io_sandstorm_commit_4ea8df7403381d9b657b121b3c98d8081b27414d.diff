From 4ea8df7403381d9b657b121b3c98d8081b27414d Mon Sep 17 00:00:00 2001
From: Kenton Varda <kenton@sandstorm.io>
Date: Wed, 1 Mar 2017 12:03:35 -0800
Subject: [PATCH] Improve security of zip/unzip sandbox by switching the
 sandboxed filesystem from blacklisting directories to whitelisting them.

---
 src/sandstorm/backup.c++ | 27 ++++++++++++++-------------
 1 file changed, 14 insertions(+), 13 deletions(-)

diff --git a/src/sandstorm/backup.c++ b/src/sandstorm/backup.c++
index 5d836611b..16d3cf455 100644
--- a/src/sandstorm/backup.c++
+++ b/src/sandstorm/backup.c++
@@ -144,21 +144,22 @@ bool BackupMain::run(kj::StringPtr grainDir) {
   // are undocumented.  :(
   KJ_SYSCALL(mount("none", "/", nullptr, MS_REC | MS_PRIVATE, nullptr));
 
-  // Mount root read-only.
-  bind(kj::str(root, "/"), "/tmp", MS_BIND | MS_NOSUID | MS_RDONLY);
-
-  if (access("/tmp/dev/null", F_OK) != 0) {
-    // Looks like we need to bind in /dev.
-    KJ_SYSCALL(mount("/dev", "/tmp/dev", nullptr, MS_BIND, nullptr));
+  // Create tmpfs root to whitelist directories that we want to bind in.
+  KJ_SYSCALL(mount("tmpfs", "/tmp", "tmpfs", 0, "size=8m,nr_inodes=128,mode=755"));
+
+  // Bind in whitelisted directories.
+  const char* WHITELIST[] = { "dev", "bin", "lib", "lib64", "usr" };
+  for (const char* dir: WHITELIST) {
+    auto src = kj::str(root, "/", dir);
+    auto dst = kj::str("/tmp/", dir);
+    if (access(src.cStr(), F_OK) == 0) {
+      KJ_SYSCALL(mkdir(dst.cStr(), 0755));
+      bind(src, dst, MS_BIND | MS_NOSUID | MS_RDONLY);
+    }
   }
 
-  // Hide sensitive directories.
-  KJ_SYSCALL(mount("tmpfs", "/tmp/proc", "tmpfs", 0, "size=32k,nr_inodes=8,mode=000"));
-  KJ_SYSCALL(mount("tmpfs", "/tmp/var", "tmpfs", 0, "size=32k,nr_inodes=8,mode=000"));
-  KJ_SYSCALL(mount("tmpfs", "/tmp/etc", "tmpfs", 0, "size=32k,nr_inodes=8,mode=000"));
-
-  // Mount inner tmpfs.
-  KJ_SYSCALL(mount("tmpfs", "/tmp/tmp", "tmpfs", 0, "size=8m,nr_inodes=128,mode=777"));
+  // Make sandboxed /tmp.
+  KJ_SYSCALL(mkdir("/tmp/tmp", 0777));
 
   // Bind in the grain's `data` (=`sandbox`).
   KJ_SYSCALL(mkdir("/tmp/tmp/data", 0777));
