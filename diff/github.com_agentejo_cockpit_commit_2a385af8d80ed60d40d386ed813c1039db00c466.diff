From 2a385af8d80ed60d40d386ed813c1039db00c466 Mon Sep 17 00:00:00 2001
From: Artur Heinze <artur@agentejo.com>
Date: Fri, 25 Sep 2020 23:18:28 +0200
Subject: [PATCH] remove $fn, $func, $f as field filter ... add $where as an
 alternative (MongoLite)

---
 lib/MongoLite/Database.php | 25 ++++++++++++++-----------
 1 file changed, 14 insertions(+), 11 deletions(-)

diff --git a/lib/MongoLite/Database.php b/lib/MongoLite/Database.php
index 08141f405..968b4484e 100644
--- a/lib/MongoLite/Database.php
+++ b/lib/MongoLite/Database.php
@@ -235,6 +235,12 @@ public function __get($collection) {
 
 class UtilArrayQuery {
 
+    protected static $closures = [];
+
+    public static function closureCall($uid, $doc) {
+        return call_user_func_array(self::$closures[$uid], [$doc]);
+    }
+
     public static function buildCondition($criteria, $concat = ' && ') {
 
         $fn = [];
@@ -268,11 +274,16 @@ public static function buildCondition($criteria, $concat = ' && ') {
 
                 case '$where':
 
-                    if (\is_callable($value)) {
-
-                        // need implementation
+                    if (\is_string($value) || !\is_callable($value)) {
+                        throw new \InvalidArgumentException($key.' Function should be callable');
                     }
 
+                    $uid = \uniqid('mongoliteCallable').bin2hex(random_bytes(5));
+
+                    self::$closures[$uid] = $value;
+
+                    $fn[] = '\\MongoLite\\UtilArrayQuery::closureCall("'.$uid.'", $document)';
+
                     break;
 
                 default:
@@ -426,14 +437,6 @@ private static function evaluate($func, $a, $b) {
                 $r = $a % $b[0] == $b[1] ?? 0;
                 break;
 
-            case '$func' :
-            case '$fn' :
-            case '$f' :
-                if (\is_string($b) || !\is_callable($b))
-                    throw new \InvalidArgumentException('Function should be callable');
-                $r = $b($a);
-                break;
-
             case '$exists':
                 $r = $b ? !\is_null($a) : \is_null($a);
                 break;
