From 9d703c0815b2b260592bc8b91d907aeef7962eb7 Mon Sep 17 00:00:00 2001
From: Yun Park <yunp@codeaurora.org>
Date: Mon, 2 Apr 2018 06:19:10 -0700
Subject: qcacld-3.0: Fix KASAN slab-out-of-bounds in ipa3_release_wdi_mapping

To avoid out-of-bounds access of mem_map_table from htt_rx_hash_deinit
, allocate mem_map_table size the same as maximum number of hash
entries, which is RX_NUM_HASH_BUCKETS * RX_ENTRIES_SIZE.

Change-Id: If25f97b47350196ceb2e8c60e7d5430a1484a01d
CRs-Fixed: 2214158
---
 core/dp/htt/htt_rx.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/core/dp/htt/htt_rx.c b/core/dp/htt/htt_rx.c
index 499b186..8a04fae 100644
--- a/core/dp/htt/htt_rx.c
+++ b/core/dp/htt/htt_rx.c
@@ -139,7 +139,7 @@ static void htt_rx_hash_deinit(struct htt_pdev_t *pdev)
 
 	if (qdf_mem_smmu_s1_enabled(pdev->osdev) && pdev->is_ipa_uc_enabled) {
 		mem_map_table = qdf_mem_map_table_alloc(
-					pdev->rx_ring.fill_level);
+					RX_NUM_HASH_BUCKETS * RX_ENTRIES_SIZE);
 		if (!mem_map_table) {
 			qdf_print("%s: Failed to allocate memory for mem map table\n",
 				  __func__);
-- 
cgit v1.1

