From 211124b972e74f0da66bc8b16f181f78793e2f66 Mon Sep 17 00:00:00 2001
From: Francois-Xavier Le Bail <devel.fx.lebail@orange.fr>
Date: Mon, 21 May 2018 09:25:15 +0200
Subject: [PATCH] (for 4.9.3) CVE-2018-16229/DCCP: Fix printing "Timestamp" and
 "Timestamp Echo" options

Add some comments.

Moreover:
Put a function definition name at the beginning of the line.

(This change was ported from commit 6df4852 in the master branch.)

Ryan Ackroyd had independently identified this buffer over-read later by
means of fuzzing and provided the packet capture file for the test.
---
 print-dccp.c                 |  53 ++++++++++++++++++++++++++++++-----
 tests/TESTLIST               |   1 +
 tests/dccp_options-oobr.out  |  19 +++++++++++++
 tests/dccp_options-oobr.pcap | Bin 0 -> 3298 bytes
 4 files changed, 66 insertions(+), 7 deletions(-)
 create mode 100644 tests/dccp_options-oobr.out
 create mode 100644 tests/dccp_options-oobr.pcap

diff --git a/print-dccp.c b/print-dccp.c
index 6e2526427..bc3feb7c1 100644
--- a/print-dccp.c
+++ b/print-dccp.c
@@ -530,7 +530,8 @@ static const struct tok dccp_option_values[] = {
 	{ 0, NULL }
 };
 
-static int dccp_print_option(netdissect_options *ndo, const u_char *option, u_int hlen)
+static int
+dccp_print_option(netdissect_options *ndo, const u_char *option, u_int hlen)
 {
 	uint8_t optlen, i;
 
@@ -623,16 +624,54 @@ static int dccp_print_option(netdissect_options *ndo, const u_char *option, u_in
 			}
 			break;
 		case 41:
-			if (optlen == 4)
+		/*
+		 * 13.1.  Timestamp Option
+		 *
+		 *  +--------+--------+--------+--------+--------+--------+
+		 *  |00101001|00000110|          Timestamp Value          |
+		 *  +--------+--------+--------+--------+--------+--------+
+		 *   Type=41  Length=6
+		 */
+			if (optlen == 6)
 				ND_PRINT((ndo, " %u", EXTRACT_32BITS(option + 2)));
 			else
-				ND_PRINT((ndo, " optlen != 4"));
+				ND_PRINT((ndo, " [optlen != 6]"));
 			break;
 		case 42:
-			if (optlen == 4)
+		/*
+		 * 13.3.  Timestamp Echo Option
+		 *
+		 *  +--------+--------+--------+--------+--------+--------+
+		 *  |00101010|00000110|           Timestamp Echo          |
+		 *  +--------+--------+--------+--------+--------+--------+
+		 *   Type=42    Len=6
+		 *
+		 *  +--------+--------+------- ... -------+--------+--------+
+		 *  |00101010|00001000|  Timestamp Echo   |   Elapsed Time  |
+		 *  +--------+--------+------- ... -------+--------+--------+
+		 *   Type=42    Len=8       (4 bytes)
+		 *
+		 *  +--------+--------+------- ... -------+------- ... -------+
+		 *  |00101010|00001010|  Timestamp Echo   |    Elapsed Time   |
+		 *  +--------+--------+------- ... -------+------- ... -------+
+		 *   Type=42   Len=10       (4 bytes)           (4 bytes)
+		 */
+			switch (optlen) {
+			case 6:
 				ND_PRINT((ndo, " %u", EXTRACT_32BITS(option + 2)));
-			else
-				ND_PRINT((ndo, " optlen != 4"));
+				break;
+			case 8:
+				ND_PRINT((ndo, " %u", EXTRACT_32BITS(option + 2)));
+				ND_PRINT((ndo, " (elapsed time %u)", EXTRACT_16BITS(option + 6)));
+				break;
+			case 10:
+				ND_PRINT((ndo, " %u", EXTRACT_32BITS(option + 2)));
+				ND_PRINT((ndo, " (elapsed time %u)", EXTRACT_32BITS(option + 6)));
+				break;
+			default:
+				ND_PRINT((ndo, " [optlen != 6 or 8 or 10]"));
+				break;
+			}
 			break;
 		case 43:
 			if (optlen == 6)
@@ -640,7 +679,7 @@ static int dccp_print_option(netdissect_options *ndo, const u_char *option, u_in
 			else if (optlen == 4)
 				ND_PRINT((ndo, " %u", EXTRACT_16BITS(option + 2)));
 			else
-				ND_PRINT((ndo, " optlen != 4 or 6"));
+				ND_PRINT((ndo, " [optlen != 4 or 6]"));
 			break;
 		case 44:
 			if (optlen > 2) {
diff --git a/tests/TESTLIST b/tests/TESTLIST
index 0645739cb..fb8217adb 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -604,6 +604,7 @@ hncp_prefix-oobr	hncp_prefix-oobr.pcapng		hncp_prefix-oobr.out		-vvv
 
 # bad packets from Ryan Ackroyd
 ieee802.11_meshhdr-oobr	ieee802.11_meshhdr-oobr.pcap	ieee802.11_meshhdr-oobr.out	-H -c1
+dccp_options-oobr	dccp_options-oobr.pcap		dccp_options-oobr.out		-vv -c8
 
 # RTP tests
 # fuzzed pcap
diff --git a/tests/dccp_options-oobr.out b/tests/dccp_options-oobr.out
new file mode 100644
index 000000000..8ca46efdb
--- /dev/null
+++ b/tests/dccp_options-oobr.out
@@ -0,0 +1,19 @@
+IP (tos 0x0, ttl 64, id 65312, offset 0, flags [DF], proto DCCP (33), length 52)
+    139.133.209.176.39420 > 139.133.209.65.5001: DCCP (CCVal 0, CsCov 0, cksum 0xaaf3 (incorrect -> 0x8bf3)) DCCP-Request (service=-189888898) seq 8 <nop, nop, nop, nop, change_l ack_ratio 2, change_r ccid 2, change_l ccid 2>
+IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto DCCP (33), length 68)
+    139.133.209.65.5001 > 139.133.209.176.39420: DCCP (CCVal 0, CsCov 0, ) DCCP-Response (service=0) (ack=38464816766) seq 1960341146 <nop, nop, change_l ack_ratio 2, [|dccp]>
+IP (tos 0x0, ttl 64, id 65313, offset 0, flags [DF], proto DCCP (33), length 56)
+    139.133.209.176.39420 > 139.133.209.65.5001: DCCP (CCVal 0, CsCov 0, cksum 0xf53a (incorrect -> 0xf551)) DCCP-Ack (ack=1960341146) seq 38464816767 <nop, confirm_r ack_ratio 2, ack_vector0 0xe9, timestamp_echo [optlen != 6 or 8 or 10]>
+IP (tos 0x0, ttl 64, id 65314, offset 0, flags [DF], proto DCCP (33), length 152)
+    139.133.209.176.46076 > 139.133.209.65.48009: DCCP (CCVal 0, CsCov 6, ) DCCP-DataAck (ack=1960341146) seq 38464816768 <nop, nop, ack_vector0 0x00, elapsed_time 1249, ndp_count 1>
+IP (tos 0x0, ttl 64, id 3176, offset 0, flags [DF], proto DCCP (33), length 52)
+    139.133.209.65.5001 > 139.133.209.176.39420: DCCP (CCVal 0, CsCov 0, cksum 0xfc63 (correct)) DCCP-Ack (ack=38464816768) seq 1960341147 <nop, ack_vector0 0x01, elapsed_time 1>
+IP (tos 0x0, ttl 64, id 65315, offset 0, flags [DF], proto DCCP (33), length 148)
+    139.133.209.176.39420 > 139.133.209.65.5001: DCCP (CCVal 0, CsCov 6, ) DCCP-DataAck (ack=1960341147) seq 38464816769 <nop, ack_vector0 0x00, elapsed_time 84>
+IP (tos 0x0, ttl 64, id 3177, offset 0, flags [DF], proto DCCP (33), length 52)
+    139.133.209.65.5001 > 139.133.209.176.39420: DCCP (CCVal 0, CsCov 0, cksum 0x0165 (correct)) DCCP-Ack (ack=38464816769) seq 1960341148 <nop, nop, ack_vector0 0x00, ndp_count 1>
+00:07:00:42:00:00 > 00:14:22:59:55:51 Null Information, send seq 0, rcv seq 0, Flags [Command], length 148
+	0x0000:  0000 0000 1422 5955 5100 07e9 bd5d 1f08  ....."YUQ....]..
+	0x0010:  0045 0000 34ff 2040 0040 2181 8b8b 85d1  .E..4..@.@!.....
+	0x0020:  b08b 85d1 4199 fc13 8908 00aa f320 0000  ....A...........
+	0x0030:  08f4 ae86 7e00 0000                      ....~...
diff --git a/tests/dccp_options-oobr.pcap b/tests/dccp_options-oobr.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..65dedede4f9c7f4a4c74d6795803b5cc69ee98d2
GIT binary patch
literal 3298
zcmeHKNla5w6us?lOKZN-1l<|zz%N5l6pK`3C__=f2`maKbwH4@P9RPoASEHVWFd+;
zER10R2u5QJF~*Hs6BllYalwMPaEvsm_rCx7TY_<jh@v*R{Z0RW=bfJS&bhD8pN!m4
zg9aXrO^pM-@~~7`lS6LT$3_vd@iP@HF_#t>Ld3*a*>XL&0PF#y6P%{D?rz_+VXUlP
ze`J>)2HqF}^lt|{TWF9`qg9(VDzy>Ie$nmnHi=M#-&4t0GA={R1t7%MK0+hZ$gW<$
z2*U*eKHTuadl@eZvW#ufs?=%|y;*Q3n&B1BK))gHJiaNMLFViTm>B2IaLxvJml`1>
z(-?Usg0l(}@fuJO>fmh=Zs9$u5Gq&VQozhmr6B64|6!Lw*Bon*QCn${%-<@2O`{o?
z1eMWbwnR(TnAo^@Tf&N!iK|v8t+6MsO>wMCU7wbok?G9J&dGJ<ZP>UezhLv0t=qO2
z7VU5s@7z^Vx_i&wGS9yK2M(4Ws;E3%Rb5kCSMNP?^w{we4UH$8PMtn;_FQv|kyt+-
z2wOk4a$#!Q#VTUmkQ=VH9{lB~1+l$?7gD<wtb)qMb#M=ga1(D(&CsDIU|~AM26bRN
zLg&$P9olFRLuN97doDB>8~UmS)l7q&=^CgixCVVlm^47<NEug+R81L~sloiU39ZTB
zYm@&Q_&YbS66-yIXlCM=Zr@}m)^(mJ*~E42^B`!b5$QZjdF))EEsn9%M;^u?%bJVW
z`7p}c5KSJ8-jd=%*618!P3B9C-V7c)cc{@BU@D2n&Q%;kJGY(14rQ+-u;%vk?qa#Q
zg`;9y=BTwS%+kZd%mAMfIch&gMLn$GwCM;{pg>!8Z)Tw3evlYyPr%CdgVNl1s3&uE
zJBSLZ+t1aF`lh;ZKi}9Yk#RQ8OBG5l<zN!S7<Wu-L-5|QP*&APgTfd~q`}nvFRWKc
z**d0dnxgE#Xcx;bJgNMUUD&zskF$$>!km4(%)&YFx7$UIw*($U*U*0yZx|hNB4ZF~
y$b{YpBIM&uDkU_7CQK9SnF&)A6C&yYcr7i$htba0@j|FR`u9S}bZAveg7z~5<)l#n

literal 0
HcmV?d00001

