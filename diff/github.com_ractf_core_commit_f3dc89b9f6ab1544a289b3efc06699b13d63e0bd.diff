From f3dc89b9f6ab1544a289b3efc06699b13d63e0bd Mon Sep 17 00:00:00 2001
From: David Cooke <me@dave.lc>
Date: Sat, 3 Oct 2020 20:11:20 +0100
Subject: [PATCH] patch unauthenticated users being able to read sensitive
 config fields by viewing them individually instead of listing them (#37)

---
 src/config/config.py | 4 ++++
 src/config/views.py  | 8 +++++---
 2 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/src/config/config.py b/src/config/config.py
index be42c793..b7a324e2 100644
--- a/src/config/config.py
+++ b/src/config/config.py
@@ -64,6 +64,10 @@ def get_all_non_sensitive():
     return config
 
 
+def is_sensitive(key):
+    return key in backend.get('sensitive_fields')
+
+
 def set_bulk(values: dict):
     for key, value in values.items():
         set(key, value)
diff --git a/src/config/views.py b/src/config/views.py
index e62731f0..3b1b2ea8 100644
--- a/src/config/views.py
+++ b/src/config/views.py
@@ -1,4 +1,4 @@
-from rest_framework.status import HTTP_400_BAD_REQUEST
+from rest_framework.status import HTTP_400_BAD_REQUEST, HTTP_403_FORBIDDEN
 from rest_framework.views import APIView
 
 from backend.response import FormattedResponse
@@ -12,10 +12,12 @@ class ConfigView(APIView):
 
     def get(self, request, name=None):
         if name is None:
-            if request.user.is_staff:
+            if request.user.is_superuser:
                 return FormattedResponse(config.get_all())
             return FormattedResponse(config.get_all_non_sensitive())
-        return FormattedResponse(config.get(name))
+        if not config.is_sensitive(name) or request.is_superuser:
+            return FormattedResponse(config.get(name))
+        return FormattedResponse(status=HTTP_403_FORBIDDEN)
 
     def post(self, request, name):
         if "value" not in request.data:
